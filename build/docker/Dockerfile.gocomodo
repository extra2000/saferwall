################################
# STEP 1 build executable binary
################################

FROM golang:1.15-alpine AS builder

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# Ca-certificates is required to call HTTPS endpoints.
RUN apk update && apk add --no-cache git ca-certificates tzdata \
    && update-ca-certificates 2>/dev/null || true

WORKDIR $GOPATH/src/saferwall/comodo/

# Copy go mod and sum files.
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy our go files.
COPY . .

# Build the binary.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \ 
    go build -a -installsuffix cgo -ldflags '-extldflags "-static"' \
     -o /go/bin/comodoscanner pkg/grpc/multiav/comodo/server/main.go

############################
# STEP 2 build a small image
############################

FROM localhost/saferwall/comodo:0.1.0
LABEL maintainer="https://github.com/saferwall"
LABEL version="0.1.0"
LABEL description="gRPC server over linux version of Comodo"

# Environment variables.
ENV COMODO_INSTALL_DIR  	/opt/COMODO
ENV COMODO_DB_UPDATE_DATE	/av_db_update_date.txt
ENV COMODO_UPDATE http://download.comodo.com/av/updates58/sigs/bases/bases.cav
ENV COMODO_BASES_CAV_PATH   $COMODO_INSTALL_DIR/scanners/bases.cav


# Update virus definition file.
RUN wget -q $COMODO_UPDATE -O $COMODO_BASES_CAV_PATH \
    && echo -n "$(date +%s)" >> $COMODO_DB_UPDATE_DATE

# Copy our static executable.
COPY --from=builder /go/bin/comodoscanner /bin/comodoscanner

# Create an app user so our program doesn't run as root.
RUN groupadd -r saferwall \
        && useradd --no-log-init -r -g saferwall saferwall

# Update permissions
RUN usermod -u 101 saferwall
RUN groupmod -g 102 saferwall
RUN chown -R saferwall:saferwall $COMODO_INSTALL_DIR

# Switch to our user.
USER saferwall

ENV LISTEN_PORT 10005
ENTRYPOINT "/bin/comodoscanner" "${LISTEN_PORT}"
