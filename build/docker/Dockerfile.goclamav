################################
# STEP 1 build executable binary
################################

FROM docker.io/golang:1.15-alpine AS builder

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# Ca-certificates is required to call HTTPS endpoints.
RUN apk update && apk add --no-cache git ca-certificates tzdata \
    && update-ca-certificates 2>/dev/null || true

WORKDIR $GOPATH/src/saferwall/clamav/

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy our go files
COPY . .

# Build the binary.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -a -installsuffix cgo -ldflags '-extldflags "-static"' \
     -o /go/bin/clamavscanner pkg/grpc/multiav/clamav/server/main.go


############################
# STEP 2 build a small image
############################

FROM localhost/saferwall/clamav:0.1.0
LABEL maintainer="https://github.com/saferwall"
LABEL version="0.1.0"
LABEL description="gRPC server clamav"

# Environment variables.
ENV CLAMAV_DB_UPDATE_DATE	/av_db_update_date.txt

# Update virus definition file.
RUN clamd && freshclam ; clamscan -V \
       && echo -n "$(date +%s)" >> $CLAMAV_DB_UPDATE_DATE

# Create an app user so our program doesn't run as root.
RUN addgroup -S saferwall \
	&& adduser -S -G saferwall saferwall  --shell /bin/sh

# Copy our binary.
COPY --from=builder /go/bin/clamavscanner /bin/clamavscanner

# Configure permissions.
RUN chown saferwall:saferwall /bin/clamavscanner \
    && chmod -R o+rw /var/log/clamav/ \ 
    && chmod -R o+rw /run/clamav/ \
    && chmod -R o+rw /var/lib/clamav/

# Switch to our user
USER saferwall

ENV LISTEN_PORT 10004
ENTRYPOINT /bin/clamavscanner "${LISTEN_PORT}"
